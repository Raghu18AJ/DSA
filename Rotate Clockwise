Rotate Clockwise

Problem statement
You are given a square matrix of dimensions ‘N * N’. You have to rotate the matrix 90 degrees in a clockwise direction.

EXAMPLE:
Input: 'N' = 2, 'NUMS' = [[1, 2], [3, 4]]

Output: [[3, 1], [4, 2]]

Here the given matrix is rotated 90 degrees in a clockwise direction.

Constraints :
1 <= 'T' <= 10
2 <= 'N' <= 10^2
1 <= 'NUMS[i]' <= 10^5

Time Limit: 1 sec

Sample Input 1 :
2
2
1 2
3 4
3
1 2 3
4 5 6
7 8 9
Sample Output 1 :
3 1
4 2
7 4 1
8 5 2
9 6 3
Explanation Of Sample Input 1 :
For the first test case,
'N' = 2, 'NUMS' = [ [1, 2], [3, 4]]
After rotation 90 degrees in a clockwise direction the matrix will be:
‘NUMS’ = [ [3, 1], [4, 2] ].

For the second test case,
'N' = 3, 'NUMS' = [ [1, 2, 3], [4, 5, 6], [7, 8, 9] ]
After rotation 90 degrees in a clockwise direction the matrix will be:
‘NUMS’ = [ [7, 4, 1], [8, 5, 2], [9, 6, 3] ].

Sample Input 2 :
2
3
5 10 4
10 6 2
10 3 3
3
3 8 2
10 3 9
6 3 2
Sample Output 2 :
10 10 5 
3 6 10 
3 2 4 
6 10 3 
3 3 8 

cpp code:

#include <bits/stdc++.h> 
void rotateClockwise(int n, vector < vector < int >> & nums) {
    // Write your code here.
    vector<vector<int>> ans;
    for(int j = 0;j<n;j++){
        vector<int> temp;
        for(int i = n-1;i>=0;i--){
            temp.push_back(nums[i][j]);
        }
        ans.push_back(temp);
    }
    nums = ans;
}
2 9 2 
