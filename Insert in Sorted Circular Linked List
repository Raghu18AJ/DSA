Insert in Sorted Circular Linked List
Difficulty: MediumAccuracy: 25.56%Submissions: 124K+Points: 4Average Time: 20m
Given a sorted circular linked list, the task is to insert a new node in this circular linked list so that it remains a sorted circular linked list.

Examples:

Input: head = 1->2->4, data = 2
Output: 1->2->2->4
Explanation: We can add 2 after the second node.

Input: head = 1->4->7->9, data = 5
Output: 1->4->5->7->9
Explanation: We can add 5 after the second node.

Constraints:
2 <= number of nodes <= 106
0 <= node->data <= 106
0 <= data <= 106

CPP SOLUTION:-

/* structure for a node
class Node {
 public:
  int data;
  Node *next;

  Node(int x){
      data = x;
      next = NULL;
  }
}; */

class Solution {
  public:
    Node* sortedInsert(Node* head, int data) {
        // code here
        Node* curr = head;
        int val = curr->data;
        //finding maximum element 
        int maxi = curr->data;
        while(curr->data>=maxi){
            maxi = curr->data;
            curr= curr->next;
        }
        if(data>=maxi || val>data){//data to insert is greatest or lowest
            while(curr->data != maxi){
                curr= curr->next;
            }
            
        }
        else{//data to insert is between the node values
            while(curr->next->data<data){
                curr=curr->next;
            }
            
            
        }
        //inserting data node in CLL
        Node* nex = curr->next;
        curr->next = new Node(data);
        curr = curr->next;
        curr->next = nex;
        if(val > data){//if data to insert is lowest
            return curr;
        }
        return head;
        
    }
};
