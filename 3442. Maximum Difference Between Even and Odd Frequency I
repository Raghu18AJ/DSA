3442. Maximum Difference Between Even and Odd Frequency I

Solved
Easy

You are given a string s consisting of lowercase English letters.

Your task is to find the maximum difference diff = a1 - a2 between the frequency of characters a1 and a2 in the string such that:

a1 has an odd frequency in the string.
a2 has an even frequency in the string.
Return this maximum difference.

 

Example 1:

Input: s = "aaaaabbc"

Output: 3

Explanation:

The character 'a' has an odd frequency of 5, and 'b' has an even frequency of 2.
The maximum difference is 5 - 2 = 3.

Example 2:

Input: s = "abcabcab"

Output: 1

Explanation:

The character 'a' has an odd frequency of 3, and 'c' has an even frequency of 2.
The maximum difference is 3 - 2 = 1.
 

Constraints:

3 <= s.length <= 100
s consists only of lowercase English letters.
s contains at least one character with an odd frequency and one with an even frequency.

C++ Code:-
class Solution {
public:
    int maximumElement(vector<int> arr){
        int ans = 0;
        for(int i = 0;i<arr.size();i++){
            if(arr[i]>ans){
                ans = arr[i];
            }
        }
        return ans;
    }
    int maxDifference(string s) {
        unordered_map<char,int> mp;
        for(int i = 0;i<s.length();i++){
            mp[s[i]]++;
        }
        vector<int> odd;
        vector<int> even;
        for(auto i: mp){
            if(i.second&1){
                odd.push_back(i.second);
            }else{
                even.push_back(i.second);
            }
        }
        if(odd.size() == 0){
            return maximumElement(even);
        }
        if(even.size() == 0){
            return maximumElement(odd);
        }
        int ans = INT_MIN;
        for(int i = 0;i<odd.size();i++){
            for(int j = 0;j<even.size();j++){
                int temp = odd[i]-even[j];
                if(temp>ans){
                    ans = temp;
                }
            }
        }
        return ans;
    }
};
